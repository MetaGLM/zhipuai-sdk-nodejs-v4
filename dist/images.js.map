{"version":3,"sources":["../lib/baseApi.ts","../lib/images.ts"],"sourcesContent":["import { AxiosResponse } from \"axios\";\nimport Request from \"./request\";\n\n\nexport type moreRequestOptions = {\n    extraHeaders?: object,\n    timeout?: number,\n    stream?: boolean\n}\n\nexport default class BaseApi<Options, Response> {\n    constructor(private readonly request: Request) {\n    }\n\n    public async post(url: string, data: object, options: Options & moreRequestOptions): Promise<Response | any> {\n        return this.request.post(url, data, {\n            headers: options.extraHeaders,\n            timeout: options.timeout,\n            responseType: options.stream ? 'stream' : 'json'\n        })\n            .catch(err => {\n                const data = err.response.data as Response\n                return Promise.reject(data)\n            })\n    }\n} ","import BaseApi from \"./baseApi\";\n\nexport type CreateImagesOptions = {\n    model: string,\n    prompt?: string,\n    n?: number,\n    quality?: string,\n    responseFormat?: string,\n    size?: string,\n    style?: string,\n    user?: string,\n    extraHeaders?: object,\n    timeout?: number,\n}\n\nexport type ImagesResponse = {\n    created: number,\n    data: Array<string>\n}\n\nexport default class Images extends BaseApi<CreateImagesOptions, ImagesResponse> {\n    public async create(options: CreateImagesOptions): Promise<ImagesResponse> {\n        return this.post(\"/images/generations\", {\n            \"prompt\": options.prompt,\n            \"model\": options.model,\n            \"n\": options.n,\n            \"quality\": options.quality,\n            \"response_format\": options.responseFormat,\n            \"size\": options.size,\n            \"style\": options.style,\n            \"user\": options.user,\n        }, options)\n    }\n} "],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAUA,IAAqB,UAArB,MAAgD;AAAA,EAC5C,YAA6B,SAAkB;AAAlB;AAAA,EAC7B;AAAA,EAEa,KAAK,KAAa,MAAc,SAAgE;AAAA;AACzG,aAAO,KAAK,QAAQ,KAAK,KAAK,MAAM;AAAA,QAChC,SAAS,QAAQ;AAAA,QACjB,SAAS,QAAQ;AAAA,QACjB,cAAc,QAAQ,SAAS,WAAW;AAAA,MAC9C,CAAC,EACI,MAAM,SAAO;AACV,cAAMA,QAAO,IAAI,SAAS;AAC1B,eAAO,QAAQ,OAAOA,KAAI;AAAA,MAC9B,CAAC;AAAA,IACT;AAAA;AACJ;;;ACLA,IAAqB,SAArB,cAAoC,QAA6C;AAAA,EAChE,OAAO,SAAuD;AAAA;AACvE,aAAO,KAAK,KAAK,uBAAuB;AAAA,QACpC,UAAU,QAAQ;AAAA,QAClB,SAAS,QAAQ;AAAA,QACjB,KAAK,QAAQ;AAAA,QACb,WAAW,QAAQ;AAAA,QACnB,mBAAmB,QAAQ;AAAA,QAC3B,QAAQ,QAAQ;AAAA,QAChB,SAAS,QAAQ;AAAA,QACjB,QAAQ,QAAQ;AAAA,MACpB,GAAG,OAAO;AAAA,IACd;AAAA;AACJ;","names":["data"]}