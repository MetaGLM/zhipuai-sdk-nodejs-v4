{"version":3,"sources":["../../lib/capability/index.ts","../../lib/core/baseApi.ts","../../lib/capability/completions.ts","../../lib/capability/images.ts","../../lib/capability/embeddings.ts"],"sourcesContent":["export { default as Completions } from \"./completions.js\"\nexport { default as Images } from \"./images.js\"\nexport { default as Embeddings } from \"./embeddings.js\"","import Request from \"./request.js\";\nexport default class BaseApi {\n    constructor(protected readonly request: Request) {\n    }\n\n    protected processError(err: any) {\n        const data = err?.response?.data ?? err\n        return Promise.reject(data)\n    }\n} ","import BaseApi from \"../core/baseApi.js\";\nimport { CreateCompletionsOptions, CompletionsResponseMessage } from \"../types/index.js\";\nimport { IncomingMessage } from \"http\";\n\nexport default class Completions extends BaseApi {\n    public async create(options: CreateCompletionsOptions): Promise<CompletionsResponseMessage | IncomingMessage> {\n        return this.request.post(\"/chat/completions\", {\n            \"model\": options.model,\n            \"request_id\": options.requestId,\n            \"temperature\": options.temperature,\n            \"top_p\": options.topP,\n            \"do_sample\": options.doSample,\n            \"max_tokens\": options.maxTokens,\n            \"seed\": options.seed,\n            \"messages\": options.messages,\n            \"stop\": options.stop,\n            \"sensitive_word_check\": options.sensitiveWordCheck,\n            \"stream\": options.stream,\n            \"tools\": options.tools,\n            \"tool_choice\": options.toolChoice,\n        }, {\n            headers: options.extraHeaders,\n            timeout: options.timeout,\n            responseType: options.stream ? 'stream' : 'json'\n        })\n            .catch(this.processError)\n    }\n} ","import BaseApi from \"../core/baseApi.js\";\nimport { CreateImagesOptions, ImagesResponse } from \"../types/index.js\";\n\nexport default class Images extends BaseApi {\n    public async create(options: CreateImagesOptions): Promise<ImagesResponse> {\n        return this.request.post(\"/images/generations\", {\n            \"prompt\": options.prompt,\n            \"model\": options.model,\n            \"n\": options.n,\n            \"quality\": options.quality,\n            \"response_format\": options.responseFormat,\n            \"size\": options.size,\n            \"style\": options.style,\n            \"user\": options.user,\n        }, {\n            headers: options.extraHeaders,\n            timeout: options.timeout,\n            responseType: options.stream ? 'stream' : 'json'\n        })\n            .catch(this.processError)\n    }\n} ","import BaseApi from \"../core/baseApi.js\";\nimport { CreateEmbeddingsOptions, EmbeddingsResponse } from \"../types/index.js\";\n\nexport default class Embeddings extends BaseApi {\n    public async create(options: CreateEmbeddingsOptions): Promise<EmbeddingsResponse> {\n        return this.request.post(\"/embeddings\", {\n            \"input\": options.input,\n            \"model\": options.model,\n            \"encoding_format\": options.encodingFormat,\n            \"user\": options.user,\n            \"sensitive_word_check\": options.sensitiveWordCheck,\n        }, {\n            headers: options.extraHeaders,\n            timeout: options.timeout,\n            responseType: options.stream ? 'stream' : 'json'\n        })\n            .catch(this.processError)\n    }\n} "],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACCA,IAAqB,UAArB,MAA6B;AAAA,EACzB,YAA+B,SAAkB;AAAlB;AAAA,EAC/B;AAAA,EAEU,aAAa,KAAU;AALrC;AAMQ,UAAM,QAAO,sCAAK,aAAL,mBAAe,SAAf,YAAuB;AACpC,WAAO,QAAQ,OAAO,IAAI;AAAA,EAC9B;AACJ;;;ACLA,IAAqB,cAArB,cAAyC,QAAQ;AAAA,EAChC,OAAO,SAA0F;AAAA;AAC1G,aAAO,KAAK,QAAQ,KAAK,qBAAqB;AAAA,QAC1C,SAAS,QAAQ;AAAA,QACjB,cAAc,QAAQ;AAAA,QACtB,eAAe,QAAQ;AAAA,QACvB,SAAS,QAAQ;AAAA,QACjB,aAAa,QAAQ;AAAA,QACrB,cAAc,QAAQ;AAAA,QACtB,QAAQ,QAAQ;AAAA,QAChB,YAAY,QAAQ;AAAA,QACpB,QAAQ,QAAQ;AAAA,QAChB,wBAAwB,QAAQ;AAAA,QAChC,UAAU,QAAQ;AAAA,QAClB,SAAS,QAAQ;AAAA,QACjB,eAAe,QAAQ;AAAA,MAC3B,GAAG;AAAA,QACC,SAAS,QAAQ;AAAA,QACjB,SAAS,QAAQ;AAAA,QACjB,cAAc,QAAQ,SAAS,WAAW;AAAA,MAC9C,CAAC,EACI,MAAM,KAAK,YAAY;AAAA,IAChC;AAAA;AACJ;;;ACxBA,IAAqB,SAArB,cAAoC,QAAQ;AAAA,EAC3B,OAAO,SAAuD;AAAA;AACvE,aAAO,KAAK,QAAQ,KAAK,uBAAuB;AAAA,QAC5C,UAAU,QAAQ;AAAA,QAClB,SAAS,QAAQ;AAAA,QACjB,KAAK,QAAQ;AAAA,QACb,WAAW,QAAQ;AAAA,QACnB,mBAAmB,QAAQ;AAAA,QAC3B,QAAQ,QAAQ;AAAA,QAChB,SAAS,QAAQ;AAAA,QACjB,QAAQ,QAAQ;AAAA,MACpB,GAAG;AAAA,QACC,SAAS,QAAQ;AAAA,QACjB,SAAS,QAAQ;AAAA,QACjB,cAAc,QAAQ,SAAS,WAAW;AAAA,MAC9C,CAAC,EACI,MAAM,KAAK,YAAY;AAAA,IAChC;AAAA;AACJ;;;AClBA,IAAqB,aAArB,cAAwC,QAAQ;AAAA,EAC/B,OAAO,SAA+D;AAAA;AAC/E,aAAO,KAAK,QAAQ,KAAK,eAAe;AAAA,QACpC,SAAS,QAAQ;AAAA,QACjB,SAAS,QAAQ;AAAA,QACjB,mBAAmB,QAAQ;AAAA,QAC3B,QAAQ,QAAQ;AAAA,QAChB,wBAAwB,QAAQ;AAAA,MACpC,GAAG;AAAA,QACC,SAAS,QAAQ;AAAA,QACjB,SAAS,QAAQ;AAAA,QACjB,cAAc,QAAQ,SAAS,WAAW;AAAA,MAC9C,CAAC,EACI,MAAM,KAAK,YAAY;AAAA,IAChC;AAAA;AACJ;","names":[]}