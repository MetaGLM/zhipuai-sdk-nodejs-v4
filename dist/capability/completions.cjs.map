{"version":3,"sources":["../../lib/capability/completions.ts","../../lib/core/baseApi.ts"],"sourcesContent":["import BaseApi from \"../core/baseApi.js\";\nimport { CreateCompletionsOptions, CompletionsResponseMessage } from \"../types/index.js\";\n\nexport default class Completions extends BaseApi {\n\n    public async create(options: CreateCompletionsOptions): Promise<CompletionsResponseMessage> {\n        return this.post(\"/chat/completions\", {\n            \"model\": options.model,\n            \"request_id\": options.requestId,\n            \"temperature\": options.temperature,\n            \"top_p\": options.topP,\n            \"do_sample\": options.doSample,\n            \"max_tokens\": options.maxTokens,\n            \"seed\": options.seed,\n            \"messages\": options.messages,\n            \"stop\": options.stop,\n            \"sensitive_word_check\": options.sensitiveWordCheck,\n            \"stream\": options.stream,\n            \"tools\": options.tools,\n            \"tool_choice\": options.toolChoice,\n        }, options)\n    }\n} ","import Request from \"./request.js\";\nimport { BaseRequestOptions } from \"../types/index.js\";\n\nexport default class BaseApi {\n    constructor(private readonly request: Request) {\n    }\n\n    private processError(err: any) {\n        const data = err?.response?.data ?? err\n        return Promise.reject(data)\n    }\n\n    public async get<Options extends BaseRequestOptions, Response>(url: string, params: object, options: Options): Promise<Response | any> {\n        return this.request.get(url, {\n            params: params,\n            headers: options.extraHeaders,\n            timeout: options.timeout,\n            responseType: options.stream ? 'stream' : 'json'\n        })\n            .catch(this.processError)\n    }\n\n    public async post<Options extends BaseRequestOptions, Response>(url: string, data: object, options: Options): Promise<Response | any> {\n        return this.request.post(url, data, {\n            headers: options.extraHeaders,\n            timeout: options.timeout,\n            responseType: options.stream ? 'stream' : 'json'\n        })\n            .catch(this.processError)\n    }\n\n    public async postForm<Options extends BaseRequestOptions, Response>(url: string, data: FormData, options: Options): Promise<Response | any> {\n        return this.request.postForm(url, data, {\n            headers: options.extraHeaders,\n            timeout: options.timeout,\n            responseType: options.stream ? 'stream' : 'json'\n        })\n            .catch(this.processError)\n    }\n} "],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACGA,IAAqB,UAArB,MAA6B;AAAA,EACzB,YAA6B,SAAkB;AAAlB;AAAA,EAC7B;AAAA,EAEQ,aAAa,KAAU;AAPnC;AAQQ,UAAM,QAAO,sCAAK,aAAL,mBAAe,SAAf,YAAuB;AACpC,WAAO,QAAQ,OAAO,IAAI;AAAA,EAC9B;AAAA,EAEa,IAAkD,KAAa,QAAgB,SAA2C;AAAA;AACnI,aAAO,KAAK,QAAQ,IAAI,KAAK;AAAA,QACzB;AAAA,QACA,SAAS,QAAQ;AAAA,QACjB,SAAS,QAAQ;AAAA,QACjB,cAAc,QAAQ,SAAS,WAAW;AAAA,MAC9C,CAAC,EACI,MAAM,KAAK,YAAY;AAAA,IAChC;AAAA;AAAA,EAEa,KAAmD,KAAa,MAAc,SAA2C;AAAA;AAClI,aAAO,KAAK,QAAQ,KAAK,KAAK,MAAM;AAAA,QAChC,SAAS,QAAQ;AAAA,QACjB,SAAS,QAAQ;AAAA,QACjB,cAAc,QAAQ,SAAS,WAAW;AAAA,MAC9C,CAAC,EACI,MAAM,KAAK,YAAY;AAAA,IAChC;AAAA;AAAA,EAEa,SAAuD,KAAa,MAAgB,SAA2C;AAAA;AACxI,aAAO,KAAK,QAAQ,SAAS,KAAK,MAAM;AAAA,QACpC,SAAS,QAAQ;AAAA,QACjB,SAAS,QAAQ;AAAA,QACjB,cAAc,QAAQ,SAAS,WAAW;AAAA,MAC9C,CAAC,EACI,MAAM,KAAK,YAAY;AAAA,IAChC;AAAA;AACJ;;;ADpCA,IAAqB,cAArB,cAAyC,QAAQ;AAAA,EAEhC,OAAO,SAAwE;AAAA;AACxF,aAAO,KAAK,KAAK,qBAAqB;AAAA,QAClC,SAAS,QAAQ;AAAA,QACjB,cAAc,QAAQ;AAAA,QACtB,eAAe,QAAQ;AAAA,QACvB,SAAS,QAAQ;AAAA,QACjB,aAAa,QAAQ;AAAA,QACrB,cAAc,QAAQ;AAAA,QACtB,QAAQ,QAAQ;AAAA,QAChB,YAAY,QAAQ;AAAA,QACpB,QAAQ,QAAQ;AAAA,QAChB,wBAAwB,QAAQ;AAAA,QAChC,UAAU,QAAQ;AAAA,QAClB,SAAS,QAAQ;AAAA,QACjB,eAAe,QAAQ;AAAA,MAC3B,GAAG,OAAO;AAAA,IACd;AAAA;AACJ;","names":[]}