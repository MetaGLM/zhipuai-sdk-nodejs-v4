{"version":3,"sources":["../../lib/core/baseApi.ts","../../lib/capability/files.ts"],"sourcesContent":["import Request from \"./request.js\";\nimport { BaseRequestOptions } from \"../types/index.js\";\n\nexport default class BaseApi {\n    constructor(private readonly request: Request) {\n    }\n\n    private processError(err: any) {\n        const data = err?.response?.data ?? err\n        return Promise.reject(data)\n    }\n\n    public async get<Options extends BaseRequestOptions, Response>(url: string, params: object, options: Options): Promise<Response | any> {\n        return this.request.get(url, {\n            params: params,\n            headers: options.extraHeaders,\n            timeout: options.timeout,\n            responseType: options.stream ? 'stream' : 'json'\n        })\n            .catch(this.processError)\n    }\n\n    public async post<Options extends BaseRequestOptions, Response>(url: string, data: object, options: Options): Promise<Response | any> {\n        return this.request.post(url, data, {\n            headers: options.extraHeaders,\n            timeout: options.timeout,\n            responseType: options.stream ? 'stream' : 'json'\n        })\n            .catch(this.processError)\n    }\n\n    public async postForm<Options extends BaseRequestOptions, Response>(url: string, data: FormData, options: Options): Promise<Response | any> {\n        return this.request.postForm(url, data, {\n            headers: options.extraHeaders,\n            timeout: options.timeout,\n            responseType: options.stream ? 'stream' : 'json'\n        })\n            .catch(this.processError)\n    }\n} ","import BaseApi from \"../core/baseApi.js\";\nimport { CreateFileOptions, FileResponse, FindFileListOptions, FileListResponse } from \"../types/index.js\";\n\nexport default class Files extends BaseApi {\n    public async create(options: CreateFileOptions): Promise<FileResponse> {\n        const formData = new FormData()\n        formData.append(\"purpose\", options.purpose);\n        formData.append(\"file\", options.file);\n        return this.postForm(\"/files\", formData, options)\n    }\n\n    public async findList(options: FindFileListOptions): Promise<FileListResponse> {\n        return this.get(\"/files\", {\n            \"purpose\": options.purpose,\n            \"limit\": options.limit,\n            \"after\": options.after,\n            \"order\": options.order,\n        }, options)\n    }\n} "],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAGA,IAAqB,UAArB,MAA6B;AAAA,EACzB,YAA6B,SAAkB;AAAlB;AAAA,EAC7B;AAAA,EAEQ,aAAa,KAAU;AAPnC;AAQQ,UAAM,QAAO,sCAAK,aAAL,mBAAe,SAAf,YAAuB;AACpC,WAAO,QAAQ,OAAO,IAAI;AAAA,EAC9B;AAAA,EAEa,IAAkD,KAAa,QAAgB,SAA2C;AAAA;AACnI,aAAO,KAAK,QAAQ,IAAI,KAAK;AAAA,QACzB;AAAA,QACA,SAAS,QAAQ;AAAA,QACjB,SAAS,QAAQ;AAAA,QACjB,cAAc,QAAQ,SAAS,WAAW;AAAA,MAC9C,CAAC,EACI,MAAM,KAAK,YAAY;AAAA,IAChC;AAAA;AAAA,EAEa,KAAmD,KAAa,MAAc,SAA2C;AAAA;AAClI,aAAO,KAAK,QAAQ,KAAK,KAAK,MAAM;AAAA,QAChC,SAAS,QAAQ;AAAA,QACjB,SAAS,QAAQ;AAAA,QACjB,cAAc,QAAQ,SAAS,WAAW;AAAA,MAC9C,CAAC,EACI,MAAM,KAAK,YAAY;AAAA,IAChC;AAAA;AAAA,EAEa,SAAuD,KAAa,MAAgB,SAA2C;AAAA;AACxI,aAAO,KAAK,QAAQ,SAAS,KAAK,MAAM;AAAA,QACpC,SAAS,QAAQ;AAAA,QACjB,SAAS,QAAQ;AAAA,QACjB,cAAc,QAAQ,SAAS,WAAW;AAAA,MAC9C,CAAC,EACI,MAAM,KAAK,YAAY;AAAA,IAChC;AAAA;AACJ;;;ACpCA,IAAqB,QAArB,cAAmC,QAAQ;AAAA,EAC1B,OAAO,SAAmD;AAAA;AACnE,YAAM,WAAW,IAAI,SAAS;AAC9B,eAAS,OAAO,WAAW,QAAQ,OAAO;AAC1C,eAAS,OAAO,QAAQ,QAAQ,IAAI;AACpC,aAAO,KAAK,SAAS,UAAU,UAAU,OAAO;AAAA,IACpD;AAAA;AAAA,EAEa,SAAS,SAAyD;AAAA;AAC3E,aAAO,KAAK,IAAI,UAAU;AAAA,QACtB,WAAW,QAAQ;AAAA,QACnB,SAAS,QAAQ;AAAA,QACjB,SAAS,QAAQ;AAAA,QACjB,SAAS,QAAQ;AAAA,MACrB,GAAG,OAAO;AAAA,IACd;AAAA;AACJ;","names":[]}